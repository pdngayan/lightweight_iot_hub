{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 33,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 75
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 18,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "none",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nimport \"timezone\"\ndates =[2:\"Monday\",3:\"Tuesday\",4:\"Wednesday\",5:\"Thursday\",6:\"Friday\",0:\"Saturday\",1:\"Sunday\"]\nncinga=from(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> map(fn: (r) => ({ r with  hour: date.hour(t: r._time,location: timezone.location(name: \"Asia/Colombo\"))}))\n  |> map(fn: (r) => ({ r with \n      date:date.monthDay(t: r._time,location: timezone.location(name: \"Asia/Colombo\")),\n      hourDesc: \n      if (r.hour> 0 and r.hour< 6) then \"Non-Working\" \n      else if (r.hour > 6 and r.hour < 8) then \"Setting-Up\"   \n      else if (r.hour > 8 and r.hour < 18) then \"Working\"   \n      else if (r.hour > 18 and r.hour < 20) then \"Extra-Working\" \n      else if (r.hour > 20 and r.hour < 23) then \"Non-Working\" \n      else if (r.hour > 23) then \"Non-Working\" \n      else if (r.hour == 0) then \"Non-Working\" \n      else if (r.hour == 6) then \"Setting-Up\" \n      else if (r.hour == 8) then \"Working\" \n      else if (r.hour == 18) then \"Extra-Working\" \n      else if (r.hour == 20) then \"Extra-Working\" \n      else if (r.hour == 23) then \"Non-Working\" else \"-\",\n      namedDay:dict.get(dict: dates, key:date.weekDay(t: r._time), default: \"\"),\n      kw:date.weekDay(t: r._time)\n  }))\n  |>sort(columns: [\"date\",\"hour\"]) \n  |> drop(columns: [\"date\", \"tag\"])\n  |> drop(columns: [\"hour\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> group(columns: [\"hourDesc\",\"namedDay\",\"kw\"])\n |> sum(column: \"_value\")\n  \n\n\n\nifinity=from(bucket: \"IFINITY\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> map(fn: (r) => ({ r with  hour: date.hour(t: r._time,location: timezone.location(name: \"Asia/Colombo\"))}))\n  |> map(fn: (r) => ({ r with \n      date:date.monthDay(t: r._time,location: timezone.location(name: \"Asia/Colombo\")),\n      hourDesc: \n      if (r.hour> 0 and r.hour< 6) then \"Non-Working\" \n      else if (r.hour > 6 and r.hour < 8) then \"Setting-Up\"   \n      else if (r.hour > 8 and r.hour < 18) then \"Working\"   \n      else if (r.hour > 18 and r.hour < 20) then \"Extra-Working\" \n      else if (r.hour > 20 and r.hour < 23) then \"Non-Working\" \n      else if (r.hour > 23) then \"Non-Working\" \n      else if (r.hour == 0) then \"Non-Working\" \n      else if (r.hour == 6) then \"Setting-Up\" \n      else if (r.hour == 8) then \"Working\" \n      else if (r.hour == 18) then \"Extra-Working\" \n      else if (r.hour == 20) then \"Extra-Working\" \n      else if (r.hour == 23) then \"Non-Working\" else \"-\",\n      namedDay:dict.get(dict: dates, key:date.weekDay(t: r._time), default: \"\"),\n      kw:date.weekDay(t: r._time)\n  }))\n  |>sort(columns: [\"date\",\"hour\"]) \n  |> drop(columns: [\"date\", \"tag\"])\n  |> drop(columns: [\"hour\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> group(columns: [\"hourDesc\",\"namedDay\",\"kw\"])\n |> sum(column: \"_value\")\n\nunion(tables: [ncinga, ifinity])\n |> group(columns: [\"namedDay\",\"hourDesc\",\"kw\"])\n |> sum(column: \"_value\")\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Working / Non-Working ",
      "transformations": [
        {
          "id": "joinByLabels",
          "options": {
            "join": [
              "namedDay",
              "kw"
            ],
            "value": "hourDesc"
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "kw"
              }
            ]
          }
        },
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": false
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 18,
        "y": 0
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "\nncinga=from(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> sum(column: \"_value\")\n\n\n\nifinity=from(bucket: \"IFINITY\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> sum(column: \"_value\")\n\nunion(tables: [ncinga, ifinity])\n |> sum(column: \"_value\")\n|> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n ",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Total  Units",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 18,
        "y": 6
      },
      "id": 5,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "\nncinga=from(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> sum(column: \"_value\")\n\n\n\nifinity=from(bucket: \"IFINITY\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> sum(column: \"_value\")\n\nunion(tables: [ncinga, ifinity])\n |> sum(column: \"_value\")\n   |> map(fn: (r) => ({r with _value: r._value * 65.0}))\n|> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n ",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Total  Cost",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 6,
      "options": {
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true,
          "values": [
            "value"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nimport \"timezone\"\nncinga=from(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> map(fn: (r) => ({ r with  hour: date.hour(t: r._time,location: timezone.location(name: \"Asia/Colombo\"))}))\n  |> map(fn: (r) => ({ r with \n      date:date.monthDay(t: r._time,location: timezone.location(name: \"Asia/Colombo\")),\n      hourDesc: \n      if (r.hour> 0 and r.hour< 6) then \"Non-Working\" \n      else if (r.hour > 6 and r.hour < 8) then \"Setting-Up\"   \n      else if (r.hour > 8 and r.hour < 18) then \"Working\"   \n      else if (r.hour > 18 and r.hour < 20) then \"Extra-Working\" \n      else if (r.hour > 20 and r.hour < 23) then \"Non-Working\" \n      else if (r.hour > 23) then \"Non-Working\" \n      else if (r.hour == 0) then \"Non-Working\" \n      else if (r.hour == 6) then \"Setting-Up\" \n      else if (r.hour == 8) then \"Working\" \n      else if (r.hour == 18) then \"Extra-Working\" \n      else if (r.hour == 20) then \"Extra-Working\" \n      else if (r.hour == 23) then \"Non-Working\" else \"-\"\n  }))\n  |>sort(columns: [\"date\",\"hour\"]) \n  |> drop(columns: [\"date\", \"tag\"])\n  |> drop(columns: [\"hour\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> group(columns: [\"hourDesc\"])\n |> sum(column: \"_value\")\n  \n\n\n\nifinity=from(bucket: \"IFINITY\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> map(fn: (r) => ({ r with  hour: date.hour(t: r._time,location: timezone.location(name: \"Asia/Colombo\"))}))\n  |> map(fn: (r) => ({ r with \n      date:date.monthDay(t: r._time,location: timezone.location(name: \"Asia/Colombo\")),\n      hourDesc: \n      if (r.hour> 0 and r.hour< 6) then \"Non-Working\" \n      else if (r.hour > 6 and r.hour < 8) then \"Setting-Up\"   \n      else if (r.hour > 8 and r.hour < 18) then \"Working\"   \n      else if (r.hour > 18 and r.hour < 20) then \"Extra-Working\" \n      else if (r.hour > 20 and r.hour < 23) then \"Non-Working\" \n      else if (r.hour > 23) then \"Non-Working\" \n      else if (r.hour == 0) then \"Non-Working\" \n      else if (r.hour == 6) then \"Setting-Up\" \n      else if (r.hour == 8) then \"Working\" \n      else if (r.hour == 18) then \"Extra-Working\" \n      else if (r.hour == 20) then \"Extra-Working\" \n      else if (r.hour == 23) then \"Non-Working\" else \"-\"\n  }))\n  |>sort(columns: [\"date\",\"hour\"]) \n  |> drop(columns: [\"date\", \"tag\"])\n  |> drop(columns: [\"hour\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> group(columns: [\"hourDesc\"])\n |> sum(column: \"_value\")\n\nunion(tables: [ncinga, ifinity])\n |> group(columns: [\"hourDesc\"])\n |> sum(column: \"_value\")\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Working / Non-Working ",
      "transformations": [],
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 7,
      "options": {
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true,
          "values": [
            "value"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nimport \"timezone\"\nncinga=from(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> map(fn: (r) => ({ r with  hour: date.hour(t: r._time,location: timezone.location(name: \"Asia/Colombo\"))}))\n  |> map(fn: (r) => ({ r with \n      date:date.monthDay(t: r._time,location: timezone.location(name: \"Asia/Colombo\")),\n      hourDesc: \n      if (r.hour> 0 and r.hour< 6) then \"Non-Working\" \n      else if (r.hour > 6 and r.hour < 8) then \"Setting-Up\"   \n      else if (r.hour > 8 and r.hour < 18) then \"Working\"   \n      else if (r.hour > 18 and r.hour < 20) then \"Extra-Working\" \n      else if (r.hour > 20 and r.hour < 23) then \"Non-Working\" \n      else if (r.hour > 23) then \"Non-Working\" \n      else if (r.hour == 0) then \"Non-Working\" \n      else if (r.hour == 6) then \"Setting-Up\" \n      else if (r.hour == 8) then \"Working\" \n      else if (r.hour == 18) then \"Extra-Working\" \n      else if (r.hour == 20) then \"Extra-Working\" \n      else if (r.hour == 23) then \"Non-Working\" else \"-\"\n  }))\n  |>sort(columns: [\"date\",\"hour\"]) \n  |> drop(columns: [\"date\", \"tag\"])\n  |> drop(columns: [\"hour\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> group(columns: [\"hourDesc\"])\n |> sum(column: \"_value\")\n  \n\n\n\nifinity=from(bucket: \"IFINITY\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"data_set_MODBUS10\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> map(fn: (r) => ({ r with  hour: date.hour(t: r._time,location: timezone.location(name: \"Asia/Colombo\"))}))\n  |> map(fn: (r) => ({ r with \n      date:date.monthDay(t: r._time,location: timezone.location(name: \"Asia/Colombo\")),\n      hourDesc: \n      if (r.hour> 0 and r.hour< 6) then \"Non-Working\" \n      else if (r.hour > 6 and r.hour < 8) then \"Setting-Up\"   \n      else if (r.hour > 8 and r.hour < 18) then \"Working\"   \n      else if (r.hour > 18 and r.hour < 20) then \"Extra-Working\" \n      else if (r.hour > 20 and r.hour < 23) then \"Non-Working\" \n      else if (r.hour > 23) then \"Non-Working\" \n      else if (r.hour == 0) then \"Non-Working\" \n      else if (r.hour == 6) then \"Setting-Up\" \n      else if (r.hour == 8) then \"Working\" \n      else if (r.hour == 18) then \"Extra-Working\" \n      else if (r.hour == 20) then \"Extra-Working\" \n      else if (r.hour == 23) then \"Non-Working\" else \"-\"\n  }))\n  |>sort(columns: [\"date\",\"hour\"]) \n  |> drop(columns: [\"date\", \"tag\"])\n  |> drop(columns: [\"hour\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> group(columns: [\"hourDesc\"])\n |> sum(column: \"_value\")\n\nunion(tables: [ncinga, ifinity])\n |> group(columns: [\"hourDesc\"])\n |> sum(column: \"_value\")\n     |> map(fn: (r) => ({r with _value: r._value * 65.0}))\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Working / Non-Working Costing in (Rs.)",
      "transformations": [],
      "type": "piechart"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Overall",
  "uid": "f1dfe679-2a9d-46c6-bf6b-b2761c9d01d1",
  "version": 28,
  "weekStart": ""
}