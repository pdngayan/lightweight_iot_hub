{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 22,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 10,
        "minVizWidth": 0,
        "namePlacement": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "valueMode": "color"
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nactivePower = [\"data_set_MODBUS13\",\"data_set_MODBUS20\",\"data_set_MODBUS27\",\"data_set_MODBUS34\",\"data_set_MODBUS41\"]\nzone = [\"data_set_MODBUS13\":\"NODEA\",\"data_set_MODBUS20\":\"NODEB\",\"data_set_MODBUS27\":\"NODEC\",\"data_set_MODBUS34\":\"NODED\",\"data_set_MODBUS41\":\"NODEE\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => contains(set: activePower, value: r._field)) \n  |> map(fn: (r) => ({r with _value: r._value / 100.0}))\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> map(fn: (r) => ({ r with zone: dict.get(dict: zone, key:r._field, default: \"\"),})) \n  |> drop(columns: [\"_field\", \"tag\"])\n  |> group(columns: [\"zone\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "A"
        }
      ],
      "title": "Node Wise Consumption",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 8,
        "y": 0
      },
      "id": 12,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\" then r._value else r._value / 100.0}))",
          "refId": "A"
        }
      ],
      "title": "Total Energy -${assertID}",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 12,
        "y": 0
      },
      "id": 14,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\") \n  |> map(fn: (r) => ({r with _value: r._value * 65.0}))\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\" then r._value else r._value / 100.0}))",
          "refId": "A"
        }
      ],
      "title": "Total Rs. Cost -${assertID}",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 16,
        "y": 0
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"NCINGA\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\" then r._value else r._value / 100.0}))",
          "refId": "A"
        }
      ],
      "title": "Last Hour Total Power - ${assertID}",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 4,
        "x": 20,
        "y": 0
      },
      "id": 13,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"NCINGA\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\" then r._value else r._value / 100.0}))",
          "refId": "A"
        }
      ],
      "title": "Last 24H Total Power - ${assertID}",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "fieldMinMax": false,
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 1,
      "links": [],
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"NCINGA/Master\")\n  |> range(start: -1)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"assert\")\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> filter(fn: (r) => r[\"assertid\"] == \"${assertID:text}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])",
          "refId": "A"
        }
      ],
      "title": "Node Details",
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "kwatt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 14
      },
      "id": 2,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nimport \"strings\"\nmodebusid=\"\"\nfrom(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> aggregateWindow(every: 1h, fn: sum)\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> aggregateWindow(every: 1h, fn: sum)\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\" then r._value else r._value/ 1000.0 }))",
          "refId": "A"
        }
      ],
      "title": "Daily Active Power- ${assertID:text}",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "amp"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 14
      },
      "id": 4,
      "options": {
        "barRadius": 0,
        "barWidth": 1,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nimport \"strings\"\ndata = {\"All\":\"data_set_MODBUS03\",\"NODEA\":\"data_set_MODBUS14\",\"NODEB\":\"data_set_MODBUS21\",\"NODEC\":\"data_set_MODBUS28\",\"NODED\":\"data_set_MODBUS35\",\"NODEE\":\"data_set_MODBUS42\"}\nfrom(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> map(fn: (r) => ({ r with modebusid:data[\"${assertID:text}\"]})) \n  |> filter(fn: (r) => r[\"_field\"] == r.modebusid)\n  |> aggregateWindow(every: 1h, fn: sum)\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"modebusid\", \"tag\"])\n  |> aggregateWindow(every: 1h, fn: sum)\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value / 100.0}))",
          "refId": "A"
        }
      ],
      "title": "Daily Current Consumption - ${assertID:text} ",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 22
      },
      "id": 3,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nimport \"strings\"\ndata = {\"All\":\"data_set_MODBUS00\",\"NODEA\":\"data_set_MODBUS15\",\"NODEB\":\"data_set_MODBUS22\",\"NODEC\":\"data_set_MODBUS29\",\"NODED\":\"data_set_MODBUS36\",\"NODEE\":\"data_set_MODBUS43\"}\nfrom(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> map(fn: (r) => ({ r with modebusid:data[\"${assertID:text}\"]})) \n  |> filter(fn: (r) => r[\"_field\"] == r.modebusid )\n  |> aggregateWindow(every: 1h, fn: sum)\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"modebusid\", \"tag\"])\n  |> aggregateWindow(every: 1h, fn: sum)\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\" then r._value else r._value / 10.0}))",
          "refId": "A"
        }
      ],
      "title": "Daily Average Voltage - ${assertID}",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 5,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 22
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nimport \"strings\"\ndata = {\"All\":\"data_set_MODBUS12\",\"NODEA\":\"data_set_MODBUS18\",\"NODEB\":\"data_set_MODBUS25\",\"NODEC\":\"data_set_MODBUS32\",\"NODED\":\"data_set_MODBUS39\",\"NODEE\":\"data_set_MODBUS46\"}\nfrom(bucket: \"NCINGA\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> map(fn: (r) => ({ r with modebusid:data[\"${assertID:text}\"]})) \n  |> filter(fn: (r) => r[\"_field\"] == r.modebusid)\n  |> aggregateWindow(every: 1h, fn: last)\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> drop(columns: [\"modebusid\", \"tag\"])\n  |> aggregateWindow(every: 1h, fn: last)\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value / 1000.0}))",
          "refId": "A"
        }
      ],
      "title": "Power Factor - ${assertID}",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 6,
        "x": 0,
        "y": 30
      },
      "id": 7,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\ndates =[2:\"Monday\",3:\"Tuesday\",4:\"Wednesday\",5:\"Thursday\",6:\"Friday\",0:\"Saturday\",1:\"Sunday\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> sort(columns: [\"key\"], desc: true)\n  |> map(fn: (r) => ({ r with \n    namedDay:\n      dict.get(dict: dates, key:date.weekDay(t: r._time), default: \"\"),\n  })) \n |> drop(columns: [\"modebusid\", \"tag\"])\n |> drop(columns: [\"_time\", \"tag\"])\n |> group(columns: [\"namedDay\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value/ 100.0}))\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n |> drop(columns: [\"_value\", \"tag\"])\n",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Energy Consumption   - ${assertID} ",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "fieldMinMax": false,
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 6,
        "x": 6,
        "y": 30
      },
      "id": 17,
      "options": {
        "displayLabels": [
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\ndates =[2:\"Monday\",3:\"Tuesday\",4:\"Wednesday\",5:\"Thursday\",6:\"Friday\",0:\"Saturday\",1:\"Sunday\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -7d)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> sort(columns: [\"key\"], desc: true)\n  |> map(fn: (r) => ({ r with \n    namedDay:\n      dict.get(dict: dates, key:date.weekDay(t: r._time), default: \"\"),\n  })) \n |> drop(columns: [\"modebusid\", \"tag\"])\n |> drop(columns: [\"_time\", \"tag\"])\n |> group(columns: [\"namedDay\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value/ 100.0}))\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n   |> map(fn: (r) => ({r with _value: r._value * 65.0}))\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n\n |> drop(columns: [\"_value\", \"tag\"])\n",
          "refId": "A"
        }
      ],
      "title": "Last 7 Days Cost(Rs.)   - ${assertID} ",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 6,
        "x": 12,
        "y": 30
      },
      "id": 8,
      "options": {
        "displayLabels": [
          "name",
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nweeks = [0: \"Week 1\",1: \"Week 2\",2: \"Week 3\",3: \"Week 4\",4: \"Week 5\",5: \"Week 6\",6: \"Week 7\",7: \"Week 8\",8: \"Week 9\",9: \"Week 10\",10: \"Week 11\",11: \"Week 12\",12: \"Week 13\",13: \"Week 14\",14: \"Week 15\",15: \"Week 16\",16: \"Week 17\",17: \"Week 18\",18: \"Week 19\",19: \"Week 20\",20: \"Week 21\",21: \"Week 22\",22: \"Week 23\",23: \"Week 24\",24: \"Week 25\",25: \"Week 26\",26: \"Week 27\",27: \"Week 28\",28: \"Week 29\",29: \"Week 30\",30: \"Week 31\",31: \"Week 32\",32: \"Week 33\",33: \"Week 34\",34: \"Week 35\",35: \"Week 36\",36: \"Week 37\",37: \"Week 38\",38: \"Week 39\",39: \"Week 40\",40: \"Week 41\",41: \"Week 42\",42: \"Week 43\",43: \"Week 44\",44: \"Week 45\",45: \"Week 46\",46: \"Week 47\",47: \"Week 48\",48: \"Week 49\",49: \"Week 50\",50: \"Week 51\",51: \"Week 52\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -1mo)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> sort(columns: [\"key\"], desc: true)\n  |> map(fn: (r) => ({ r with \n    namedDay:\n      dict.get(dict: weeks, key:date.week(t: r._time), default: \"\"),\n  })) \n |> drop(columns: [\"_time\", \"tag\"])\n |> group(columns: [\"namedDay\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value/ 1000.0 }))\n |> difference(nonNegative: true)\n |> sum(column: \"_value\")\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n |> drop(columns: [\"_value\", \"tag\"])\n",
          "refId": "A"
        }
      ],
      "title": "Last 4 Week Energy Consumption  - ${assertID:text}",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "fieldMinMax": false,
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 6,
        "x": 18,
        "y": 30
      },
      "id": 15,
      "options": {
        "displayLabels": [
          "value",
          "name"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nweeks = [0: \"Week 1\",1: \"Week 2\",2: \"Week 3\",3: \"Week 4\",4: \"Week 5\",5: \"Week 6\",6: \"Week 7\",7: \"Week 8\",8: \"Week 9\",9: \"Week 10\",10: \"Week 11\",11: \"Week 12\",12: \"Week 13\",13: \"Week 14\",14: \"Week 15\",15: \"Week 16\",16: \"Week 17\",17: \"Week 18\",18: \"Week 19\",19: \"Week 20\",20: \"Week 21\",21: \"Week 22\",22: \"Week 23\",23: \"Week 24\",24: \"Week 25\",25: \"Week 26\",26: \"Week 27\",27: \"Week 28\",28: \"Week 29\",29: \"Week 30\",30: \"Week 31\",31: \"Week 32\",32: \"Week 33\",33: \"Week 34\",34: \"Week 35\",35: \"Week 36\",36: \"Week 37\",37: \"Week 38\",38: \"Week 39\",39: \"Week 40\",40: \"Week 41\",41: \"Week 42\",42: \"Week 43\",43: \"Week 44\",44: \"Week 45\",45: \"Week 46\",46: \"Week 47\",47: \"Week 48\",48: \"Week 49\",49: \"Week 50\",50: \"Week 51\",51: \"Week 52\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -1mo)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> sort(columns: [\"key\"], desc: true)\n  |> map(fn: (r) => ({ r with \n    namedDay:\n      dict.get(dict: weeks, key:date.week(t: r._time), default: \"\"),\n  })) \n |> drop(columns: [\"_time\", \"tag\"])\n |> group(columns: [\"namedDay\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value/ 100.0 }))\n |> difference(nonNegative: true)\n |> sum(column: \"_value\")\n |> map(fn: (r) => ({r with _value: r._value * 65.0}))\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n |> drop(columns: [\"_value\", \"tag\"])\n\n",
          "refId": "A"
        }
      ],
      "title": "Last 4 Week Cost (Rs)  - ${assertID:text}",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 0,
        "y": 45
      },
      "id": 6,
      "options": {
        "displayLabels": [
          "name",
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nmonths = [1:\"January\",2:\"February\",3:\"March\",4:\"April\",5:\"May\",6:\"June\",7:\"July\",8:\"August\",9:\"September\",10:\"October\",11:\"November\",12: \"December\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -12mo)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> sort(columns: [\"key\"], desc: true)\n  |> map(fn: (r) => ({ r with \n    namedMonth:\n      dict.get(dict: months, key:date.month(t: r._time), default: \"\"),\n  })) \n  |> drop(columns: [\"_time\", \"tag\"])\n |> group(columns: [\"namedMonth\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value/ 100.0 }))\n |> difference(nonNegative: true)\n|> sum(column: \"_value\")\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n |> drop(columns: [\"_value\", \"tag\"])\n\n\n",
          "refId": "A"
        }
      ],
      "title": "Last 12 Month Energy Consumption  - ${assertID}",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 6,
        "y": 45
      },
      "id": 16,
      "options": {
        "displayLabels": [
          "name",
          "value"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"date\"\nimport \"dict\"\nimport \"strings\"\nmonths = [1:\"January\",2:\"February\",3:\"March\",4:\"April\",5:\"May\",6:\"June\",7:\"July\",8:\"August\",9:\"September\",10:\"October\",11:\"November\",12: \"December\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -12mo)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] =~ /data_set/)\n  |> filter(fn: (r) => r[\"_field\"] == \"${assertID:value}\")\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> drop(columns: [\"_field\", \"tag\"])\n  |> sort(columns: [\"key\"], desc: true)\n  |> map(fn: (r) => ({ r with \n    namedMonth:\n      dict.get(dict: months, key:date.month(t: r._time), default: \"\"),\n  })) \n  |> drop(columns: [\"_time\", \"tag\"])\n |> group(columns: [\"namedMonth\"])\n  |> map(fn: (r) => ({r with _value: if \"${assertID:text}\"==\"All\"  then r._value else r._value/ 100.0 }))\n |> difference(nonNegative: true)\n|> sum(column: \"_value\")\n |> map(fn: (r) => ({r with _value: r._value * 65.0}))\n |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})\n\n |> drop(columns: [\"_value\", \"tag\"])\n\n\n",
          "refId": "A"
        }
      ],
      "title": "Last 12 Month Cost (Rs)  - ${assertID}",
      "type": "piechart"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "NODEA",
          "value": "data_set_MODBUS13"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Assert ID",
        "multi": false,
        "name": "assertID",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "data_set_MODBUS10"
          },
          {
            "selected": true,
            "text": "NODEA",
            "value": "data_set_MODBUS13"
          },
          {
            "selected": false,
            "text": "NODEB",
            "value": "data_set_MODBUS20"
          },
          {
            "selected": false,
            "text": "NODEC",
            "value": "data_set_MODBUS27"
          },
          {
            "selected": false,
            "text": "NODED",
            "value": "data_set_MODBUS34"
          },
          {
            "selected": false,
            "text": "NODEE",
            "value": "data_set_MODBUS41"
          }
        ],
        "query": "All : data_set_MODBUS10, NODEA : data_set_MODBUS13, NODEB : data_set_MODBUS20, NODEC : data_set_MODBUS27, NODED : data_set_MODBUS34,NODEE : data_set_MODBUS41",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "NCINGA Zone wise",
  "uid": "af6d510d-8984-4683-bd32-7737d37840df2",
  "version": 18,
  "weekStart": ""
}