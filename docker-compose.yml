version: "3"

services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"
    networks:
      - iot
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./cert/ca-root-cert.crt:/mosquitto/ca-root-cert.crt
      - ./cert/server.key:/mosquitto/server.key
      - ./cert/server.crt:/mosquitto/server.crt

  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    ports:
      - "8086:8086"
    networks:
      - iot
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=user
      - DOCKER_INFLUXDB_INIT_PASSWORD=password1234
      - DOCKER_INFLUXDB_INIT_ORG=BRN
      - DOCKER_INFLUXDB_INIT_BUCKET=BLI
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=4eYvsu8wZCJ6tKuE2sxvFHkvYFwSMVK0011hEEiojvejzpSaij86vYQomN_12au6eK-2MZ6Knr-Sax201y70w==

  influx-setup:
    image: influxdb
    container_name: influxdb-setup
    depends_on:
      - influxdb
    networks:
      - iot
    environment:
      - DOCKER_INFLUXDB_INIT_ORG=BRN
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=4eYvsu8wZCJ6tKuE2sxvFHkvYFwSMVK0011hEEiojvejzpSaij86vYQomN_12au6eK-2MZ6Knr-Sax201y70w==
    command: >
        bash -c "
          echo 'Waiting for InfluxDB to be ready...'
          until influx ping --host http://influxdb:8086; do 
            echo 'Still waiting...'
            sleep 3
          done
          echo 'InfluxDB is ready, creating additional buckets...'
          influx bucket create -n 'NCINGA' -o "$$DOCKER_INFLUXDB_INIT_ORG" -t "$$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN" --host http://influxdb:8086 || echo 'NCINGA bucket might already exist'
          influx bucket create -n 'IFINITY' -o "$$DOCKER_INFLUXDB_INIT_ORG" -t "$$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN" --host http://influxdb:8086 || echo 'IFINITY bucket might already exist'
          echo 'Bucket setup complete!'
        "
    restart: "no"

  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    networks:
      - iot

  telegraf2:
    image: telegraf
    container_name: telegraf2
    restart: always
    volumes:
      - ./telegraf2.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot

  telegraf3:
    image: telegraf
    container_name: telegraf3
    restart: always
    volumes:
      - ./telegraf3.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - iot

#  telegraf4:
#    image: telegraf
#    container_name: telegraf4
#    restart: always
#    volumes:
#      - ./telegrafEpic1.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#
#  telegraf5:
#    image: telegraf
#    container_name: telegraf5
#    restart: always
#    volumes:
#      - ./telegrafEpic2.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf6:
#    image: telegraf
#    container_name: telegraf6
#    restart: always
#    volumes:
#      - ./telegrafEpic3.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf61:
#    image: telegraf
#    container_name: telegraf61
#    restart: always
#    volumes:
#      - ./telegrafEpic4.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf7:
#    image: telegraf
#    container_name: telegraf7
#    restart: always
#    volumes:
#      - ./telegrafAKH1.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/ncingaaws/rootCA.crt:/mosquitto/AmazonRootCA1.pem
#      - ./cert/ncingaaws/ncinga.cert.pem:/mosquitto/certificate.pem.crt
#      - ./cert/ncingaaws/ncinga.private.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf8:
#    image: telegraf
#    container_name: telegraf8
#    restart: always
#    volumes:
#      - ./telegrafUrmi.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf9:
#    image: telegraf
#    container_name: telegraf9
#    restart: always
#    volumes:
#      - ./telegrafAKH2.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf10:
#    image: telegraf
#    container_name: telegraf10
#    restart: always
#    volumes:
#      - ./telegrafHameem.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/magicbit/AmazonRootCA1.pem:/mosquitto/AmazonRootCA1.pem
#      - ./cert/magicbit/certificate.pem.crt:/mosquitto/certificate.pem.crt
#      - ./cert/magicbit/private.pem.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf11:
#    image: telegraf
#    container_name: telegraf11
#    restart: always
#    volumes:
#      - ./telegrafImpress1.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/ncingaaws/rootCA.crt:/mosquitto/AmazonRootCA1.pem
#      - ./cert/ncingaaws/ncinga.cert.pem:/mosquitto/certificate.pem.crt
#      - ./cert/ncingaaws/ncinga.private.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf12:
#    image: telegraf
#    container_name: telegraf12
#    restart: always
#    volumes:
#      - ./telegrafImpress2.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/ncingaaws/rootCA.crt:/mosquitto/AmazonRootCA1.pem
#      - ./cert/ncingaaws/ncinga.cert.pem:/mosquitto/certificate.pem.crt
#      - ./cert/ncingaaws/ncinga.private.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot
#
#  telegraf13:
#    image: telegraf
#    container_name: telegraf13
#    restart: always
#    volumes:
#      - ./telegrafImpress3.conf:/etc/telegraf/telegraf.conf:ro
#      - ./cert/ncingaaws/rootCA.crt:/mosquitto/AmazonRootCA1.pem
#      - ./cert/ncingaaws/ncinga.cert.pem:/mosquitto/certificate.pem.crt
#      - ./cert/ncingaaws/ncinga.private.key:/mosquitto/private.pem.key
#    depends_on:
#      - influxdb
#    networks:
#      - iot


  
  grafana:
    image: pdngayan1/grafana:v2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - iot
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini:ro
    depends_on:
      - influxdb

  mongodb:
    image: mongo:8.0.9
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    networks:
      - iot
    volumes:
      - mongo-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d

  iotbackend:
    image: pdngayan1/iot-backend:v1
    container_name: iotbackend
    restart: always
    ports:
      - "8081:8080"
    networks:
      - iot
    depends_on:
      - mongodb

  iotclient:
    image: pdngayan1/iot-client-fe:v1
    container_name: iotclient
    restart: always
    ports:
      - "81:80"
    networks:
      - iot
    depends_on:
      - iotbackend

  iotadmin:
    image: pdngayan1/iot-admin-fe:v1
    container_name: iotadmin
    restart: always
    ports:
      - "82:80"
    networks:
      - iot
    depends_on:
      - iotbackend

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - grafana
    networks:
      - iot


networks:
  iot:

volumes:
  grafana-data:
  influxdb-data:
  influxdb-config:
  mongo-data:
