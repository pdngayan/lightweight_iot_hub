[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false


# Starlark Processor Plugin
[[processors.starlark]]
  # Inline Starlark script
  source = '''
def apply(metric):
  # Iterate through fields in the original metric
  nmetric = Metric("mqtt_consumer", tags={}, fields={})
  print(nmetric);
  for key, value in metric.fields.items():
    parts = key.split('/')
    print(parts);
    if len(parts) >= 3:
      replaceVal = parts[0].replace("FLOW1_", "")
      nmetric.tags['customer'] = replaceVal
      nmetric.tags['group'] = parts[1]
      nmetric.tags['utility_type'] = parts[2]
      nmetric.fields[parts[3]] = value
  metric.fields.clear()
  return nmetric
  '''


[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "4eYvsu8wZCJ6tKuE2sxvFHkvYFwSMVK0011hEEiojvejzpSaij86vYQomN_12au6eK-2MZ6Knr-Sax201y70w=="
  organization = "BRN"
  bucket = "URMI"

[[outputs.file]]
    files = ["stdout"]

[[inputs.mqtt_consumer]]
  servers = ["ssl://a2uqhfcd4oyt36-ats.iot.ap-southeast-2.amazonaws.com:8883"]
  insecure_skip_verify = false
  tls_cert = "/mosquitto/certificate.pem.crt"
  tls_key = "/mosquitto/private.pem.key"
  tls_ca = "/mosquitto/AmazonRootCA1.pem"

  topics = [
  "tn/emr/TN2305057/tx"
  ]

  data_format = "json"

