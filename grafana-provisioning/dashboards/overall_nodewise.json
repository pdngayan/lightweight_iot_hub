{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 36,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 18,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nactivePower = [\"data_set_MODBUS13\",\"data_set_MODBUS20\",\"data_set_MODBUS27\",\"data_set_MODBUS34\",\"data_set_MODBUS41\"]\nzone = [\"data_set_MODBUS13\":\"NODEA\",\"data_set_MODBUS20\":\"NODEB\",\"data_set_MODBUS27\":\"NODEC\",\"data_set_MODBUS34\":\"NODED\",\"data_set_MODBUS41\":\"NODEE\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: today())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => contains(set: activePower, value: r._field)) \n  |> map(fn: (r) => ({r with _value: r._value / 100.0 }))\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> map(fn: (r) => ({ r with zone: dict.get(dict: zone, key:r._field, default: \"\"),da:\"Today\"})) \n  |> drop(columns: [\"_field\", \"tag\"])\n  |> group(columns: [\"zone\",\"da\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "import \"dict\"\nactivePower = [\"data_set_MODBUS13\",\"data_set_MODBUS20\",\"data_set_MODBUS27\",\"data_set_MODBUS34\",\"data_set_MODBUS41\"]\nzone = [\"data_set_MODBUS13\":\"NODEA\",\"data_set_MODBUS20\":\"NODEB\",\"data_set_MODBUS27\":\"NODEC\",\"data_set_MODBUS34\":\"NODED\",\"data_set_MODBUS41\":\"NODEE\"]\nfrom(bucket: \"NCINGA\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => contains(set: activePower, value: r._field)) \n  |> map(fn: (r) => ({r with _value: r._value / 100.0 }))\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> map(fn: (r) => ({ r with zone: dict.get(dict: zone, key:r._field, default: \"\"),da:\"Yesterday\"})) \n  |> drop(columns: [\"_field\", \"tag\"])\n  |> group(columns: [\"zone\",\"da\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "B"
        }
      ],
      "title": "NCINGA - Today Node Wise Consumption",
      "transformations": [
        {
          "id": "joinByLabels",
          "options": {
            "join": [
              "da"
            ],
            "value": "zone"
          }
        },
        {
          "id": "calculateField",
          "options": {}
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 18,
        "y": 0
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"NCINGA/Master\")\n  |> range(start: -1)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"assert\")\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> drop(columns: [\"name\", \"tag\"])",
          "refId": "A"
        }
      ],
      "title": "NCINGA Node Details",
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 18,
        "x": 0,
        "y": 12
      },
      "id": 2,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum"
          ],
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "import \"dict\"\nactivePower = [\"data_set_MODBUS13\",\"data_set_MODBUS20\",\"data_set_MODBUS27\",\"data_set_MODBUS34\",\"data_set_MODBUS41\"]\nzone = [\"data_set_MODBUS13\":\"NODEA\",\"data_set_MODBUS20\":\"NODEB\",\"data_set_MODBUS27\":\"NODEC\",\"data_set_MODBUS34\":\"NODED\",\"data_set_MODBUS41\":\"NODEE\"]\nfrom(bucket: \"IFINITY\")\n  |> range(start: today())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => contains(set: activePower, value: r._field)) \n  |> map(fn: (r) => ({r with _value: r._value / 100.0 }))\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> map(fn: (r) => ({ r with zone: dict.get(dict: zone, key:r._field, default: \"\"),da:\"Today\"})) \n  |> drop(columns: [\"_field\", \"tag\"])\n  |> group(columns: [\"zone\",\"da\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "hide": false,
          "query": "import \"dict\"\nactivePower = [\"data_set_MODBUS13\",\"data_set_MODBUS20\",\"data_set_MODBUS27\",\"data_set_MODBUS34\",\"data_set_MODBUS41\"]\nzone = [\"data_set_MODBUS13\":\"NODEA\",\"data_set_MODBUS20\":\"NODEB\",\"data_set_MODBUS27\":\"NODEC\",\"data_set_MODBUS34\":\"NODED\",\"data_set_MODBUS41\":\"NODEE\"]\nfrom(bucket: \"IFINITY\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => contains(set: activePower, value: r._field)) \n  |> map(fn: (r) => ({r with _value: r._value / 100.0 }))\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"host\", \"tag\"])\n  |> drop(columns: [\"topic\", \"tag\"])\n  |> map(fn: (r) => ({ r with zone: dict.get(dict: zone, key:r._field, default: \"\"),da:\"Yesterday\"})) \n  |> drop(columns: [\"_field\", \"tag\"])\n  |> group(columns: [\"zone\",\"da\"])\n  |> difference(nonNegative: true)\n  |> sum(column: \"_value\")\n  |> rename(fn: (column) => {_newColumnName = if column =~ /^_/ then \"\" else column return _newColumnName})",
          "refId": "B"
        }
      ],
      "title": "IFINITY - Today Node Wise Consumption",
      "transformations": [
        {
          "id": "joinByLabels",
          "options": {
            "join": [
              "da"
            ],
            "value": "zone"
          }
        },
        {
          "id": "calculateField",
          "options": {}
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P5697886F9CA74929"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 18,
        "y": 12
      },
      "id": 4,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P5697886F9CA74929"
          },
          "query": "from(bucket: \"IFINITY/Master\")\n  |> range(start: -1)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"assert\")\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> drop(columns: [\"_measurement\", \"tag\"])\n  |> drop(columns: [\"_start\", \"tag\"])\n  |> drop(columns: [\"_stop\", \"tag\"])\n  |> drop(columns: [\"_time\", \"tag\"])\n  |> drop(columns: [\"name\", \"tag\"])",
          "refId": "A"
        }
      ],
      "title": "IFINITY Node Details",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Overall_nodewise",
  "uid": "a5abe691-8016-4d89-b5b2-e24f2602180b",
  "version": 5,
  "weekStart": ""
}